module literals/FloatingPointLiterals

// 3.10.2. Floating-Point Literals

context-free start-symbols
  
  FloatLiteral

context-free syntax

  FloatLiteral.DeciFloat = DeciFloatLiteral
  FloatLiteral.HexaFloat = HexaFloatLiteral
  FloatLiteral.DeciDouble = DeciDoubleLiteral
  FloatLiteral.HexaDouble = HexaDoubleLiteral

lexical syntax

  DeciFloatLiteral = [0-9]+ "." [0-9]* DeciFloatExponentPart? [fF]?
  DeciFloatLiteral = "." [0-9]+ DeciFloatExponentPart? [fF]?
  DeciFloatLiteral = [0-9]+ DeciFloatExponentPart [fF]
  DeciFloatLiteral = [0-9]+ DeciFloatExponentPart 
  DeciFloatLiteral = [0-9]+ [fF]
  
  DeciDoubleLiteral = [0-9]+ "." [0-9]* DeciFloatExponentPart? [dD]?
  DeciDoubleLiteral = "." [0-9]+ DeciFloatExponentPart? [dD]?
  DeciDoubleLiteral = [0-9]+ DeciFloatExponentPart [dD]
  DeciDoubleLiteral = [0-9]+ DeciFloatExponentPart
  DeciDoubleLiteral = [0-9]+ [dD]
 
  DeciFloatExponentPart = [eE] SignedInteger
  SignedInteger = [\+\-]? [0-9]+

lexical restrictions

  DeciFloatLiteral -/- [fF]
  DeciDoubleLiteral -/- [dD]
  SignedInteger -/- [0-9]

lexical syntax

  HexaFloatLiteral = HexaSignificand BinaryExponent [fF]?
  HexaDoubleLiteral = HexaSignificand BinaryExponent [dD]?
  HexaSignificand = [0] [xX] [0-9a-fA-F\_]* [0-9a-fA-F] "."?  
  HexaSignificand = [0] [xX] [0-9a-fA-F\_]* [0-9a-fA-F] "." [0-9a-fA-F\_]* [0-9a-fA-F]
  BinaryExponent = [pP] SignedInteger

lexical restrictions

  HexaSignificand -/- [0-9a-fA-F\.]
